0cf028e41c799668875b8e50b08a3397
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _tslib = require("tslib");

var _vue = require("vue");

var _vue2 = _interopRequireDefault(_vue);

var _vueClassComponent = require("vue-class-component");

var _vueClassComponent2 = _interopRequireDefault(_vueClassComponent);

var _helper_util = require("../../../../utilities/helper_util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// We declare the props separately to make props types inferable.
const Props = _vue2.default.extend({
  props: {
    mfa_serial: String,
    mfa_token: String
  }
});
/** Localstorage keys */


const local_mfa_serial = new _helper_util.LocalStorageVal("aws_s3_mfa_serial");
/**
 * File reader component for taking in inspec JSON data.
 * Uploads data to the store with unique IDs asynchronously as soon as data is entered.
 * Emits "got-files" with a list of the unique_ids of the loaded files.
 */

let S3Reader = class S3Reader extends Props {
  constructor() {
    super(...arguments);
    /** Models if currently displayed form is valid.
     * Shouldn't be used to interpret literally anything else as valid - just checks fields filled
     */

    this.valid = false;
    /** Form required field rules. Maybe eventually expand to other stuff */

    this.req_rule = v => (v || "").trim().length > 0 || "Field is Required";

    this.mfa_rule = v => (v || "").trim().match("^\\d{6}$") !== null || "Field must be the 6 number code from a valid authenticator device";
  }
  /** On mount, try to look up stored auth info */


  mounted() {
    this.change_mfa_serial(local_mfa_serial.get_default(""));
  }
  /** Handles changes to mfa serial */


  change_mfa_token(new_value) {
    this.$emit("update:mfa_token", new_value);
  }
  /** Handles changes to mfa token */


  change_mfa_serial(new_value) {
    local_mfa_serial.set(new_value);
    this.$emit("update:mfa_serial", new_value);
  }
  /** When button is pressed or enter is pressed */


  proceed() {
    this.$emit("exit-mfa");
  }

};
S3Reader = (0, _tslib.__decorate)([(0, _vueClassComponent2.default)({})], S3Reader);
exports.default = S3Reader; //# sourceMappingURL=module.jsx.map
})()
var defaultExport = (module.exports.__esModule) ? module.exports.default : module.exports;var __vue__options__ = (typeof defaultExport === "function"? defaultExport.options: defaultExport)
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-stepper-content',{attrs:{"step":"2"}},[_c('v-form',{model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:"valid"}},[_c('v-text-field',{attrs:{"value":_vm.mfa_token,"label":"MFA Token","rules":[_vm.req_rule, _vm.mfa_rule]},on:{"input":_vm.change_mfa_token,"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.proceed($event)}}}),_vm._v(" "),_c('v-text-field',{attrs:{"value":_vm.mfa_serial,"label":"MFA Device ARN (Optional)","hint":"Defaults to virtual IAM device"},on:{"input":_vm.change_mfa_serial,"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.proceed($event)}}}),_vm._v(" "),_c('v-btn',{staticClass:"my-2 mr-2",attrs:{"color":"primary","disabled":!_vm.valid},on:{"click":function($event){return _vm.$emit('auth-mfa')}}},[_vm._v("\n      Login\n    ")]),_vm._v(" "),_c('v-btn',{staticClass:"my-2 ml-2",attrs:{"color":"red"},on:{"click":_vm.proceed}},[_vm._v("\n      Cancel\n    ")])],1)],1)}
__vue__options__.staticRenderFns = []

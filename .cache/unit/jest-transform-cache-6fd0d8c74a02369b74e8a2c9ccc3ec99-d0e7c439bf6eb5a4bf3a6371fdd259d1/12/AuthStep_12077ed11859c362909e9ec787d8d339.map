{"version":3,"sources":["AuthStep.vue"],"names":[],"mappings":";;;;;;;;;AAyCA;;;;AACA;;;;AAEA;;AAEA;;;;AACA;;;;AAEA;AACA;AACA;AACA;;AAGA;AAEA;;;;;AAQA;AAAA;;AACA;;;;AAGA;AACA;AAEA;;AACA;AACA;AACA;AAEA;;AACA;AAuBA;;AACA;AASA;;AAhCA;AACA;AACA;AACA;AACA;;AAGA;AAEA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAMA;;;AACA;AACA;AACA;AACA;AACA;;AA7CA;AAAA;AAJA;AACA;AADA;AADA","sourcesContent":["<template>\n  <v-stepper-content step=\"1\">\n    <v-form v-model=\"valid\">\n      <v-text-field v-model=\"username\" label=\"Username\" :rules=\"[req_rule]\" />\n      <v-text-field\n        v-model=\"password\"\n        label=\"Password\"\n        :rules=\"[req_rule]\"\n        :append-icon=\"show_secret ? 'mdi-eye' : 'mdi-eye-off'\"\n        :type=\"show_secret ? 'text' : 'password'\"\n        @click:append=\"show_secret = !show_secret\"\n      />\n      <v-text-field\n        v-model=\"hostname\"\n        label=\"Hostname\"\n        :rules=\"[req_rule]\"\n        hint=\"Ex: https://my.website.com:8089\"\n      />\n    </v-form>\n    <v-row class=\"mx-1\">\n      <v-btn\n        color=\"primary\"\n        :disabled=\"!valid || logging_in\"\n        :loading=\"logging_in\"\n        @click=\"try_login\"\n        class=\"my-2\"\n      >\n        Login\n      </v-btn>\n      <v-spacer />\n      <v-btn @click=\"$emit('show-help')\">\n        Help\n        <v-icon class=\"ml-2\">\n          mdi-help-circle\n        </v-icon>\n      </v-btn>\n    </v-row>\n  </v-stepper-content>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\nimport Component from \"vue-class-component\";\nimport { getModule } from \"vuex-module-decorators\";\nimport { LocalStorageVal } from \"../../../../utilities/helper_util\";\nimport InspecIntakeModule, { FileID } from \"@/store/report_intake\";\nimport FileList from \"@/components/global/upload_tabs/aws/FileList.vue\";\nimport { SplunkEndpoint } from \"../../../../utilities/splunk_util\";\n\n// Our saved fields\nconst local_username = new LocalStorageVal<string>(\"splunk_username\");\nconst local_password = new LocalStorageVal<string>(\"splunk_password\");\nconst local_hostname = new LocalStorageVal<string>(\"splunk_hostname\");\n\n// We declare the props separately to make props types inferable.\nconst Props = Vue.extend({});\n\n/**\n *\n */\n@Component({\n  components: {\n    FileList\n  }\n})\nexport default class SplunkAuth extends Props {\n  /** Models if currently displayed form is valid.\n   * Shouldn't be used to interpret literally anything else as valid - just checks fields filled\n   */\n  valid: boolean = false;\n  show_secret: boolean = false;\n\n  /** State of input fields */\n  username: string = \"\";\n  password: string = \"\";\n  hostname: string = \"\";\n\n  /** Whether we are currently authenticating */\n  logging_in = false;\n  try_login() {\n    // Save credentials\n    local_username.set(this.username);\n    local_password.set(this.password);\n    local_hostname.set(this.hostname);\n\n    // Check splunk\n    let s = new SplunkEndpoint(this.hostname, this.username, this.password);\n\n    this.logging_in = true;\n    s.check_auth()\n      .then(ok => {\n        // all goes well, proceed\n        this.$emit(\"authenticated\", s);\n        this.logging_in = false;\n      })\n      .catch(err => {\n        this.logging_in = false;\n        this.$emit(\"error\", err);\n      });\n  }\n\n  /** Form required field rules. Maybe eventually expand to other stuff */\n  req_rule = (v: string | null | undefined) =>\n    (v || \"\").trim().length > 0 || \"Field is Required\";\n\n  /** Init our fields */\n  mounted() {\n    this.username = local_username.get_default(\"\");\n    this.password = local_password.get_default(\"\");\n    this.hostname = local_hostname.get_default(\"\");\n  }\n}\n</script>\n"]}
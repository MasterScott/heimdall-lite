{"version":3,"sources":["SplunkReader.vue"],"names":[],"mappings":";;;;;;;;;AA6DA;;;;AACA;;;;AAGA;;;;AACA;;;;AACA;;AAIA;;;;;;AAEA;AACA;AACA;AADA;AAIA;;;;;;;AAYA;AAAA;;AACA;;AACA;AAEA;;AACA;AAEA;;AACA;AA0EA;AAxEA;;;AACA;AACA;AACA;;AAGA;AACA;AAEA;;;AACA;AACA;AACA;AACA;AAEA;;;;;AAGA;AACA;AACA;AACA;;AAEA;AAGA;;AACA;AACA;AACA;AAGA;;AACA;AACA;AACA;;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;;AACA;AACA;AAGA;;AACA;AACA;AAGA;;AACA;AACA;AAGA;AAvCA;AAyCA;AAEA;;;AACA;AACA;AACA;AACA;AAEA;;;AACA;AACA;AACA;;AAjFA;AAAA;AANA;AACA;AACA;AACA;AAHA;AADA","sourcesContent":["<template>\n  <ErrorTooltip ref=\"error_tooltip\">\n    <v-stepper v-model=\"step\" vertical class=\"elevation-0\">\n      <v-stepper-step step=\"1\">\n        Login Credentials\n      </v-stepper-step>\n      <v-stepper-step step=\"2\">\n        Search Execution Events\n      </v-stepper-step>\n\n      <AuthStep\n        @authenticated=\"handle_login\"\n        @error=\"handle_error\"\n        @show-help=\"error_count = -1\"\n      />\n\n      <!-- :complete=\"!!assumed_role && assumed_role.from_mfa\" -->\n\n      <FileList\n        :endpoint=\"splunk_state\"\n        @exit-list=\"handle_logout\"\n        @got-files=\"got_files\"\n        @error=\"handle_error\"\n      />\n\n      <v-overlay\n        :opacity=\"50\"\n        absolute=\"absolute\"\n        :value=\"error_count >= 3 || error_count < 0\"\n      >\n        <div class=\"text-center\">\n          <p>\n            <span v-if=\"error_count > 0\">\n              It seems you may be having trouble using the Splunk toolkit. Are\n              you sure that you have configured it properly?\n            </span>\n            <br />\n            <span>\n              For installation instructions and further information, check here:\n            </span>\n            <v-btn\n              target=\"_blank\"\n              href=\"https://github.com/mitre/hdf-json-to-splunk/\"\n              text\n              color=\"info\"\n              px-0\n            >\n              <v-icon pr-2>mdi-github-circle</v-icon>\n              Splunk HDF Plugin\n            </v-btn>\n          </p>\n          <v-btn color=\"info\" @click=\"error_count = 0\">\n            Ok\n          </v-btn>\n        </div>\n      </v-overlay>\n    </v-stepper>\n  </ErrorTooltip>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\nimport Component from \"vue-class-component\";\nimport { getModule } from \"vuex-module-decorators\";\nimport InspecIntakeModule, { FileID } from \"@/store/report_intake\";\nimport AuthStep from \"./AuthStep.vue\";\nimport FileList from \"./FileList.vue\";\nimport {\n  SplunkEndpoint,\n  SplunkErrorCode\n} from \"../../../../utilities/splunk_util\";\nimport ErrorTooltip from \"../../../generic/ErrorTooltip.vue\";\n\n// We declare the props separately to make props types inferable.\nconst Props = Vue.extend({\n  props: {}\n});\n\n/**\n * File reader component for taking in inspec JSON data.\n * Uploads data to the store with unique IDs asynchronously as soon as data is entered.\n * Emits \"got-files\" with a list of the unique_ids of the loaded files.\n */\n@Component({\n  components: {\n    AuthStep,\n    FileList,\n    ErrorTooltip\n  }\n})\nexport default class SplunkReader extends Props {\n  /** Our session information, saved iff valid */\n  splunk_state: SplunkEndpoint | null = null;\n\n  /** Current step. 1 for login, 2 for search */\n  step: number = 1;\n\n  /** Count errors to know if we should show overlay */\n  error_count = 0;\n\n  /** When login is clicked - save credentials, verify that they work, then proceed if they do*/\n  handle_login(new_endpoint: SplunkEndpoint) {\n    // Store the state\n    this.splunk_state = new_endpoint;\n\n    // Move the carousel\n    this.step = 2;\n  }\n\n  /** When cancel/logoutis clicked from the search window */\n  handle_logout() {\n    this.step = 1;\n    this.splunk_state = null;\n  }\n\n  /** Callback to handle a splunk error.\n   * Sets shown error.\n   */\n  handle_error(error: SplunkErrorCode): void {\n    switch (error) {\n      case SplunkErrorCode.BadNetwork:\n        this.error_count += 1;\n        // https://docs.splunk.com/Documentation/Splunk/8.0.1/Admin/Serverconf\n        this.show_error_message(\n          \"Connection to host failed. Please ensure that the hostname is correct, and that your splunk server has been properly configured to allow CORS requests. Please see https://docs.splunk.com/Documentation/Splunk/8.0.1/Admin/Serverconf for information on how to enable CORS.\"\n        );\n        break;\n      case SplunkErrorCode.PageNotFound:\n        this.error_count += 1;\n        this.show_error_message(\n          \"Connection made with errors. Please ensure your hostname is formatted as shown in the example.\"\n        );\n        break;\n      case SplunkErrorCode.BadAuth:\n        this.show_error_message(\"Bad username or password.\");\n        break;\n      case SplunkErrorCode.SearchFailed:\n        this.show_error_message(\"Internal splunk error while searching\");\n        break;\n      case SplunkErrorCode.ConsolidationFailed:\n      case SplunkErrorCode.SchemaViolation:\n        this.error_count += 1;\n        this.show_error_message(\"Error creating execution from splunk events.\");\n        break;\n      case SplunkErrorCode.InvalidGUID:\n        this.show_error_message(\n          \"Duplicate execution GUID detected. The odds of this happening should be astronomically low. Please file a bug report.\"\n        );\n        break;\n      case SplunkErrorCode.BadUrl:\n        this.show_error_message(\n          \"Invalid URL. Please ensure you have typed it correctly.\"\n        );\n        break;\n      case SplunkErrorCode.UnknownError:\n        this.show_error_message(\n          \"Something went wrong, but we're not sure what. Please file a bug report.\"\n        );\n        break;\n    }\n  }\n\n  /** Give our error tooltip the message */\n  show_error_message(msg: string) {\n    let tt = this.$refs[\"error_tooltip\"] as ErrorTooltip;\n    tt.show_error(msg);\n  }\n\n  /** Callback on got files */\n  got_files(files: Array<FileID>) {\n    this.$emit(\"got-files\", files);\n  }\n}\n</script>\n"]}
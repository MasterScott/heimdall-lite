{"version":3,"sources":["UploadNexus.vue"],"names":[],"mappings":";;;;;;;;;;AA4DA;;;;AACA;;;;AACA;;AAEA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AAEA;;;AAWA;;AAGA;AACA;AACA;AACA;;AAFA;AADA;AAOA;;;;;;AAeA;AAAA;;AACA;AAqDA;;;AAlDA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;;AAEA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;;AArDA;AAAA;AAVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AADA","sourcesContent":["<template>\n  <v-container>\n    <Modal\n      :value=\"value\"\n      @input=\"$emit('input', $event.target.value)\"\n      :persistent=\"persistent\"\n    >\n      <div v-if=\"is_logged_in\" style=\"padding: 8px;float: right; width:100px\">\n        <v-btn id=\"logout\" @click=\"logout()\" color=\"normal\">Logout</v-btn>\n      </div>\n      <v-tabs\n        :vertical=\"$vuetify.breakpoint.mdAndUp\"\n        active\n        :value=\"active_tab\"\n        @change=\"selected_tab\"\n        color=\"primary-visible\"\n        show-arrows\n      >\n        <v-tabs-slider></v-tabs-slider>\n        <!-- Define our tabs -->\n        <v-tab href=\"#uploadtab-local\">Local Files</v-tab>\n\n        <v-tab v-if=\"is_logged_in\" href=\"#uploadtab-database\">\n          {{ user }} Files\n        </v-tab>\n\n        <v-tab href=\"#uploadtab-s3\">S3 Bucket</v-tab>\n\n        <v-tab href=\"#uploadtab-splunk\">Splunk</v-tab>\n        <v-spacer />\n        <v-divider />\n        <v-tab href=\"#uploadtab-samples\">Samples</v-tab>\n\n        <!-- Include those components -->\n        <v-tab-item value=\"uploadtab-local\">\n          <FileReader @got-files=\"got_files\" />\n        </v-tab-item>\n\n        <v-tab-item value=\"uploadtab-database\">\n          <DatabaseReader @got-files=\"got_files\" />\n        </v-tab-item>\n\n        <v-tab-item value=\"uploadtab-samples\">\n          <SampleList @got-files=\"got_files\" />\n        </v-tab-item>\n\n        <v-tab-item value=\"uploadtab-s3\">\n          <S3Reader @got-files=\"got_files\" />\n        </v-tab-item>\n\n        <v-tab-item value=\"uploadtab-splunk\">\n          <SplunkReader @got-files=\"got_files\" />\n        </v-tab-item>\n      </v-tabs>\n      <HelpFooter />\n    </Modal>\n  </v-container>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\nimport Component from \"vue-class-component\";\nimport { getModule } from \"vuex-module-decorators\";\nimport InspecIntakeModule, { FileID } from \"@/store/report_intake\";\nimport Modal from \"@/components/global/Modal.vue\";\nimport FileReader from \"@/components/global/upload_tabs/FileReader.vue\";\nimport DatabaseReader from \"@/components/global/upload_tabs/DatabaseReader.vue\";\nimport HelpFooter from \"@/components/global/upload_tabs/HelpFooter.vue\";\nimport S3Reader from \"@/components/global/upload_tabs/aws/S3Reader.vue\";\nimport SplunkReader from \"@/components/global/upload_tabs/splunk/SplunkReader.vue\";\nimport SampleList from \"@/components/global/upload_tabs/SampleList.vue\";\nimport ServerModule from \"@/store/server\";\nimport { LocalStorageVal } from \"@/utilities/helper_util\";\n\nexport class UserProfile {\n  id?: number;\n  first_name?: string;\n  last_name?: string;\n  email?: string;\n  image?: string;\n  phone_number?: string;\n  createdAt?: Date;\n  updatedAt?: Date;\n}\n\nconst local_tab = new LocalStorageVal<string>(\"nexus_curr_tab\");\n\n// We declare the props separately to make props types inferable.\nconst Props = Vue.extend({\n  props: {\n    value: Boolean, // Whether it is open. Modelable\n    persistent: Boolean // Whether clicking outside closes\n  }\n});\n\n/**\n * Multiplexes all of our file upload components\n * Emits \"got-files\" with a list of the unique_ids of the loaded files, wherever they come from\n */\n@Component({\n  components: {\n    Modal,\n    FileReader,\n    DatabaseReader,\n    HelpFooter,\n    S3Reader,\n    SplunkReader,\n    SampleList\n  }\n})\nexport default class UploadNexus extends Props {\n  active_tab: string = \"\"; // Set in mounted\n\n  // Loads the last open tab\n  mounted() {\n    console.log(\"mount UploadNexus\");\n    this.active_tab = local_tab.get_default(\"uploadtab-local\");\n  }\n\n  get is_logged_in(): boolean {\n    let mod = getModule(ServerModule, this.$store);\n\n    if (mod.serverMode) {\n      if (this.token) {\n        return true;\n      } else {\n        return false;\n      }\n    } else {\n      return false;\n    }\n  }\n\n  get token(): string {\n    let mod = getModule(ServerModule, this.$store);\n    return mod.token || \"\";\n  }\n\n  get user(): string {\n    let mod = getModule(ServerModule, this.$store);\n    if (mod.profile) {\n      return mod.profile.email || \"pending\";\n    } else {\n      return \"pending\";\n    }\n  }\n\n  //logout from backend\n  logout() {\n    console.log(\"logout\");\n    getModule(ServerModule, this.$store).clear_token();\n    this.$router.push(\"/login\");\n  }\n  // Handles change in tab\n  selected_tab(new_tab: string) {\n    this.active_tab = new_tab;\n    local_tab.set(new_tab);\n  }\n\n  // Event passthrough\n  got_files(files: FileID[]) {\n    console.log(\"got_files\");\n    this.$emit(\"got-files\", files);\n  }\n}\n</script>\n"]}
{"file":"/Users/sjoshi/test/heimdall-lite/tests/unit/UploadNexus.spec.ts","mappings":";;;AAAA,gBAAc;AAEd,8DAA8B;AAC9B,kGAA8D;AAC9D,mEAAmD;AAEnD,gDAA+D;AAC/D,oEAA0C;AAE1C,MAAM,OAAO,GAAG,IAAI,iBAAO,EAAE,CAAC;AAC9B,IAAI,OAAqB,CAAC;AAC1B,IAAI,GAAG,GAAG,kCAAS,CAAC,gBAAY,CAAC,CAAC;AAElC,UAAU,CAAC,GAAG,EAAE;IACd,YAAY,CAAC,OAAO,CAAC,YAAY,EAAE,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC;IAElE,OAAO,GAAG,yBAAY,CAAC,yBAAW,EAAE;QAClC,OAAO;QACP,SAAS,EAAE;YACT,UAAU,EAAE,IAAI;YAChB,KAAK,EAAE,IAAI;SACZ;KACF,CAAC,CAAC;AACL,CAAC,CAAC,CAAC;AAEH,QAAQ,CAAC,iBAAiB,EAAE,GAAG,EAAE;IAC/B,EAAE,CAAC,wBAAwB,EAAE,GAAG,EAAE;QAChC,GAAG,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;QAC7B,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;IACxC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,0BAA0B,EAAE,GAAG,EAAE;QAClC,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,SAAS,CAAC;QACxC,GAAG,CAAC,WAAW,EAAE,CAAC;QAClB,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACpC,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,oCAAoC,EAAE,KAAK,IAAI,EAAE;QAClD,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,MAAM,CAAC;QACrC,GAAG,CAAC,WAAW,EAAE,CAAC;QAClB,8BAA8B;QAC9B,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;IAEH,EAAE,CAAC,6CAA6C,EAAE,KAAK,IAAI,EAAE;QAC3D,GAAG,CAAC,WAAW,EAAE,CAAC;QAClB,OAAO,CAAC,GAAG,CAAC,eAAe,GAAG,MAAM,CAAC;QACrC,MAAM,OAAO,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC;QAC7B,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC,MAAM,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC;AACL,CAAC,CAAC,CAAC","names":[],"sources":["/Users/sjoshi/test/heimdall-lite/tests/unit/UploadNexus.spec.ts"],"sourcesContent":["import \"jest\";\nimport Vue from \"vue\";\nimport Vuetify from \"vuetify\";\nimport UploadNexus from \"@/components/global/UploadNexus.vue\";\nimport { getModule } from \"vuex-module-decorators\";\n\nimport { mount, shallowMount, Wrapper } from \"@vue/test-utils\";\nimport ServerModule from \"@/store/server\";\n\nconst vuetify = new Vuetify();\nlet wrapper: Wrapper<Vue>;\nlet mod = getModule(ServerModule);\n\nbeforeEach(() => {\n  localStorage.setItem(\"auth_token\", JSON.stringify(\"dummy-token\"));\n\n  wrapper = shallowMount(UploadNexus, {\n    vuetify,\n    propsData: {\n      persistent: true,\n      value: true\n    }\n  });\n});\n\ndescribe(\"UploadNexus.vue\", () => {\n  it(\"Set token module works\", () => {\n    mod.set_token(\"dummy-token\");\n    expect(mod.token).toBe(\"dummy-token\");\n  });\n\n  it(\"Server mode module check\", () => {\n    process.env.VUE_APP_API_URL = \"testurl\";\n    mod.server_mode();\n    expect(mod.serverMode).toBe(true);\n  });\n\n  it(\"Logout button exist when logged in\", async () => {\n    process.env.VUE_APP_API_URL = \"test\";\n    mod.server_mode();\n    //await wrapper.vm.$nextTick()\n    expect(wrapper.find(\"#logout\").exists()).toBe(true);\n  });\n\n  it(\"Logout button doesn't exist when logged out\", async () => {\n    mod.clear_token();\n    process.env.VUE_APP_API_URL = \"test\";\n    await wrapper.vm.$nextTick();\n    expect(wrapper.find(\"#logout\").exists()).toBe(false);\n  });\n});\n"],"version":3}
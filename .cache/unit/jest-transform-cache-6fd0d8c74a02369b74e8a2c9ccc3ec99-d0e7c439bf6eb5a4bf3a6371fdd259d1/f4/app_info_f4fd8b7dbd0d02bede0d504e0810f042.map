{"file":"/Users/sjoshi/test/heimdall-lite/src/store/app_info.ts","mappings":";;;AAAA,mEAA4D;AAC5D,kEAAkC;AAqBlC,IAAM,aAAa,GAAnB,MAAM,aAAc,SAAQ,mCAAU;IACpC,sBAAsB;IACtB,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,GAAG,CAAC,eAAe,CAAC;IACrC,CAAC;IAED,0BAA0B;IAC1B,IAAI,WAAW;QACb,OAAO,OAAO,CAAC,GAAG,CAAC,WAAW,CAAC;IACjC,CAAC;IAED,iFAAiF;IACjF,IAAI,UAAU;QACZ,OAAO,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;IAChC,CAAC;IAED,wDAAwD;IACxD,IAAI,QAAQ;QACV,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,2DAA2D;IAC3D,IAAI,SAAS;QACX,OAAO,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;IACvC,CAAC;IAED,sBAAsB;IACtB,IAAI,OAAO;QACT,OAAO,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC;IAC7B,CAAC;IAED,wBAAwB;IACxB,IAAI,SAAS;QACX,OAAO,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC;IAC/B,CAAC;IAED,2BAA2B;IAC3B,IAAI,MAAM;QACR,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;IAC5B,CAAC;IAED,8BAA8B;IAC9B,IAAI,MAAM;QACR,OAAO,OAAO,CAAC,GAAG,CAAC,MAAM,CAAC;IAC5B,CAAC;CACF,CAAA;AA7CK,aAAa;IANlB,+BAAM,CAAC;QACN,UAAU,EAAE,IAAI;QAChB,OAAO,EAAE,IAAI;QACb,KAAK,EAAE,eAAK;QACZ,IAAI,EAAE,MAAM;KACb,CAAC;GACI,aAAa,CA6ClB;AAED,kBAAe,aAAa,CAAC","names":[],"sources":["/Users/sjoshi/test/heimdall-lite/src/store/app_info.ts"],"sourcesContent":["import { Module, VuexModule } from \"vuex-module-decorators\";\nimport Store from \"@/store/store\";\n\n/** Configure this to match data set in vue.config.ts */\ndeclare const process: {\n  env: {\n    PACKAGE_VERSION: string;\n    DESCRIPTION: string;\n    REPOSITORY: string;\n    LICENSE: string;\n    CHANGELOG: string;\n    BRANCH: string;\n    ISSUES: string;\n  };\n};\n\n@Module({\n  namespaced: true,\n  dynamic: true,\n  store: Store,\n  name: \"info\"\n})\nclass AppInfoModule extends VuexModule {\n  /** The app version */\n  get version(): string {\n    return process.env.PACKAGE_VERSION;\n  }\n\n  /** The app description */\n  get description(): string {\n    return process.env.DESCRIPTION;\n  }\n\n  /** The full app repository url, e.g. \"https://github.com/mitre/heimdall-lite\" */\n  get repository(): string {\n    return process.env.REPOSITORY;\n  }\n\n  /** The username/org part of the repo url, e.g. mitre */\n  get repo_org(): string {\n    return this.repository.split(\"/\")[3];\n  }\n\n  /** The project name of the repo url, e.g. heimdall-lite */\n  get repo_name(): string {\n    return this.repository.split(\"/\")[4];\n  }\n\n  /** The app license */\n  get license(): string {\n    return process.env.LICENSE;\n  }\n\n  /** The app changelog */\n  get changelog(): string {\n    return process.env.CHANGELOG;\n  }\n\n  /** The app branch/build */\n  get branch(): string {\n    return process.env.BRANCH;\n  }\n\n  /** The app open new issues */\n  get issues(): string {\n    return process.env.ISSUES;\n  }\n}\n\nexport default AppInfoModule;\n"],"version":3}
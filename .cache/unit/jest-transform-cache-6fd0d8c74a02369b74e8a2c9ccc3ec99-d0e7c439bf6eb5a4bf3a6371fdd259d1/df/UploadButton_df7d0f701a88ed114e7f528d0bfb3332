d47c7024115566cea098a724c2fbe0e5
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _tslib = require("tslib");

var _vue = require("vue");

var _vue2 = _interopRequireDefault(_vue);

var _vueClassComponent = require("vue-class-component");

var _vueClassComponent2 = _interopRequireDefault(_vueClassComponent);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// We declare the props separately to make props types inferable.
const Props = _vue2.default.extend({
  props: {}
});
/**
 * File reader component for taking in inspec JSON data.
 * Uploads data to the store with unique IDs asynchronously as soon as data is entered.
 * Emits "got-files" with a list of the unique_ids of the loaded files.
 */


let UploadButton = class UploadButton extends Props {
  /** Callback for our file reader */
  select_file() {
    let raw_files = this.$refs["real-input"].files; // Coerce into a more ergonomic type

    let files = fix_files(raw_files);

    if (files.length > 0) {
      // Notify we got files
      this.$emit("files-selected", files);
    } // Clear
    // this.curr_file = [];

  }
  /** Programatically show real input selector */


  show_selector() {
    let file_input = this.$refs["real-input"];
    file_input.click();
  }

};
UploadButton = (0, _tslib.__decorate)([(0, _vueClassComponent2.default)({
  components: {}
})], UploadButton);
exports.default = UploadButton;
/** Coerces the types held by a filereader into an array */

function fix_files(f) {
  if (f === null || f === undefined) {
    return [];
  } else {
    return [...f];
  }
} //# sourceMappingURL=module.jsx.map
})()
var defaultExport = (module.exports.__esModule) ? module.exports.default : module.exports;var __vue__options__ = (typeof defaultExport === "function"? defaultExport.options: defaultExport)
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{staticClass:"caption font-weight-medium"},[_c('v-btn',{attrs:{"small":_vm.$vuetify.breakpoint.smAndDown},on:{"click":_vm.show_selector}},[_vm._v("\n    Upload\n    "),_c('v-icon',{staticClass:"pl-2",attrs:{"small":_vm.$vuetify.breakpoint.smAndDown}},[_vm._v("mdi-file-upload")])],1),_vm._v(" "),_c('div',{attrs:{"hidden":""}},[_c('input',{ref:"real-input",attrs:{"type":"file","multiple":"","accept":".json, application/json"},on:{"change":_vm.select_file}})])],1)}
__vue__options__.staticRenderFns = []

{"version":3,"sources":["HelpModal.vue"],"names":[],"mappings":";;;;;;;;;AAuEA;;;;AACA;;;;AAIA;;AACA;;;;;;AAEA;AACA;AACA;AADA;;AAMA;AAAA;;AACA;AAIA;;AAHA;AACA;AACA;;AAJA;AAAA;AAFA;AADA","sourcesContent":["<template>\n  <v-dialog v-model=\"dialog\" width=\"75%\">\n    <!-- clickable slot passes the activator prop up to parent \n        This allows the parent to pass in a clickable icon -->\n    <template v-slot:activator=\"{ on }\">\n      <slot name=\"clickable\" v-bind:on=\"on\"> </slot>\n    </template>\n\n    <v-card>\n      <v-card-title class=\"headline grey\" primary-title\n        >How to use Heimdall Lite {{ version }}</v-card-title\n      >\n\n      <v-card-text>\n        <br />\n\n        <h2>\n          View the results of an\n          <a href=\"htps://www.inspec.io\">InSpec</a> profile execution (using\n          InSpec's JSON reporter) or the results from\n          <a href=\"https://github.com/mitre/heimdall_tools\">Heimdall Tools</a>\n          which converts many Static and Dynamic scanning tools Results to a\n          Heimdall Data Format JSON file.\n        </h2>\n        <br />\n        <p>\n          Easily see how many controls passed and failed.\n          <br />\n          <br />Click on the donut charts to filter the controls by status and\n          severity.\n        </p>\n        <v-img src=\"../../assets/data_cards.png\" />\n        <br />\n        <hr />\n        <br />\n        <h2>\n          Use the treemap to navigate through your controls by NIST family\n          classification.\n        </h2>\n        <br />\n        <v-img src=\"../../assets/treemap.png\" />\n        <br />\n        <hr />\n        <br />\n        <h2>Use the data table to sort your controls and see more details.</h2>\n        <br />\n        <v-img src=\"../../assets/data_table.png\" />\n        <br />\n        <hr />\n        <br />\n        <h2>\n          Click on a control to detect which tests passed or failed, or see its\n          details and code.\n        </h2>\n        <br />\n        <v-img src=\"../../assets/control_data.png\" />\n        <br />\n        <hr />\n        <br />\n      </v-card-text>\n\n      <v-divider></v-divider>\n\n      <v-card-actions>\n        <v-btn color=\"primary\" text @click=\"dialog = false\">Close Window</v-btn>\n      </v-card-actions>\n    </v-card>\n  </v-dialog>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\nimport Component from \"vue-class-component\";\n\nimport LinkItem from \"@/components/global/sidebaritems/SidebarLink.vue\";\n\nimport { getModule } from \"vuex-module-decorators\";\nimport AppInfoModule from \"@/store/app_info\";\n\n// We declare the props separately to make props types inferable.\nconst Props = Vue.extend({\n  props: {}\n});\n@Component({\n  components: {}\n})\nexport default class HelpModal extends Props {\n  dialog: boolean = false;\n  get version(): string {\n    return getModule(AppInfoModule, this.$store).version;\n  }\n}\n</script>\n"]}
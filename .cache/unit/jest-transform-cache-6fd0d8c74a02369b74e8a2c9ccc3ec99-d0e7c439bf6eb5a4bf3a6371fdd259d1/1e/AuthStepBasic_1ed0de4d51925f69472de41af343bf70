36a80fd8463b0d45fa2b57cdf8257b81
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _tslib = require("tslib");

var _vue = require("vue");

var _vue2 = _interopRequireDefault(_vue);

var _vueClassComponent = require("vue-class-component");

var _vueClassComponent2 = _interopRequireDefault(_vueClassComponent);

var _helper_util = require("../../../../utilities/helper_util");

var _FileList = require("@/components/global/upload_tabs/aws/FileList.vue");

var _FileList2 = _interopRequireDefault(_FileList);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// We declare the props separately to make props types inferable.
const Props = _vue2.default.extend({
  props: {
    access_token: String,
    secret_token: String
  }
});
/** Localstorage keys */


const local_access_token = new _helper_util.LocalStorageVal("aws_s3_access_token");
const local_secret_token = new _helper_util.LocalStorageVal("aws_s3_secret_token");
/**
 * File reader component for taking in inspec JSON data.
 * Uploads data to the store with unique IDs asynchronously as soon as data is entered.
 * Emits "got-files" with a list of the unique_ids of the loaded files.
 */

let S3Reader = class S3Reader extends Props {
  constructor() {
    super(...arguments);
    /** Models if currently displayed form is valid.
     * Shouldn't be used to interpret literally anything else as valid - just checks fields filled
     */

    this.valid = false;
    this.show_secret = false;
    /** Form required field rules. Maybe eventually expand to other stuff */

    this.req_rule = v => (v || "").trim().length > 0 || "Field is Required";
  } // Callback for change in access token


  change_access_token(new_value) {
    local_access_token.set(new_value);
    this.$emit("update:access_token", new_value);
  } // Callback for change in secret token


  change_secret_token(new_value) {
    local_secret_token.set(new_value);
    this.$emit("update:secret_token", new_value);
  }
  /** On mount, try to look up stored auth info */


  mounted() {
    // Load our credentials
    this.change_access_token(local_access_token.get_default(""));
    this.change_secret_token(local_secret_token.get_default(""));
  }

};
S3Reader = (0, _tslib.__decorate)([(0, _vueClassComponent2.default)({
  components: {
    FileList: _FileList2.default
  }
})], S3Reader);
exports.default = S3Reader; //# sourceMappingURL=module.jsx.map
})()
var defaultExport = (module.exports.__esModule) ? module.exports.default : module.exports;var __vue__options__ = (typeof defaultExport === "function"? defaultExport.options: defaultExport)
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-stepper-content',{attrs:{"step":"1"}},[_c('v-form',{model:{value:(_vm.valid),callback:function ($$v) {_vm.valid=$$v},expression:"valid"}},[_c('v-text-field',{attrs:{"value":_vm.access_token,"label":"User Account Access Token","lazy-validation":"lazy","rules":[_vm.req_rule]},on:{"input":_vm.change_access_token}}),_vm._v(" "),_c('v-text-field',{attrs:{"value":_vm.secret_token,"label":"User Account Secret Token","rules":[_vm.req_rule],"append-icon":_vm.show_secret ? 'mdi-eye' : 'mdi-eye-off',"type":_vm.show_secret ? 'text' : 'password'},on:{"input":_vm.change_secret_token,"click:append":function($event){_vm.show_secret = !_vm.show_secret}}})],1),_vm._v(" "),_c('v-btn',{staticClass:"my-2 mr-3",attrs:{"color":"primary","disabled":!_vm.valid},on:{"click":function($event){return _vm.$emit('auth-basic')}}},[_vm._v("\n    Basic Login\n  ")]),_vm._v(" "),_c('v-btn',{staticClass:"my-2 mr-3",attrs:{"color":"green","disabled":!_vm.valid},on:{"click":function($event){return _vm.$emit('goto-mfa')}}},[_vm._v("\n    MFA Login\n  ")])],1)}
__vue__options__.staticRenderFns = []

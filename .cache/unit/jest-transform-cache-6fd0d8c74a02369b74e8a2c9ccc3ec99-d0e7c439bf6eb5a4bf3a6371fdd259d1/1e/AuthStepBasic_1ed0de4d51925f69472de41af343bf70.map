{"version":3,"sources":["AuthStepBasic.vue"],"names":[],"mappings":";;;;;;;;;AAwCA;;;;AACA;;;;AAIA;;AAQA;;;;;;AAEA;AACA;AACA;AACA;AACA;AAFA;AADA;AAOA;;;AACA;AACA;AAEA;;;;;;AAUA;AAAA;;AACA;;;;AAGA;AACA;AAEA;;AACA;AAqBA;;;AAjBA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AAEA;;;AACA;AACA;AACA;AACA;AACA;;AA5BA;AAAA;AAJA;AACA;AADA;AADA","sourcesContent":["<template>\n  <v-stepper-content step=\"1\">\n    <v-form v-model=\"valid\">\n      <v-text-field\n        :value=\"access_token\"\n        @input=\"change_access_token\"\n        label=\"User Account Access Token\"\n        lazy-validation=\"lazy\"\n        :rules=\"[req_rule]\"\n      />\n      <v-text-field\n        :value=\"secret_token\"\n        @input=\"change_secret_token\"\n        label=\"User Account Secret Token\"\n        :rules=\"[req_rule]\"\n        :append-icon=\"show_secret ? 'mdi-eye' : 'mdi-eye-off'\"\n        :type=\"show_secret ? 'text' : 'password'\"\n        @click:append=\"show_secret = !show_secret\"\n      />\n    </v-form>\n    <v-btn\n      color=\"primary\"\n      :disabled=\"!valid\"\n      @click=\"$emit('auth-basic')\"\n      class=\"my-2 mr-3\"\n    >\n      Basic Login\n    </v-btn>\n    <v-btn\n      color=\"green\"\n      :disabled=\"!valid\"\n      @click=\"$emit('goto-mfa')\"\n      class=\"my-2 mr-3\"\n    >\n      MFA Login\n    </v-btn>\n  </v-stepper-content>\n</template>\n\n<script lang=\"ts\">\nimport Vue from \"vue\";\nimport Component from \"vue-class-component\";\nimport { getModule } from \"vuex-module-decorators\";\nimport S3, { ObjectKey } from \"aws-sdk/clients/s3\";\nimport { AWSError } from \"aws-sdk/lib/error\";\nimport { LocalStorageVal } from \"../../../../utilities/helper_util\";\nimport {\n  Auth,\n  transcribe_error,\n  get_session_token,\n  MFA_Info\n} from \"../../../../utilities/aws_util\";\nimport InspecIntakeModule, { FileID } from \"@/store/report_intake\";\nimport FileList from \"@/components/global/upload_tabs/aws/FileList.vue\";\n\n// We declare the props separately to make props types inferable.\nconst Props = Vue.extend({\n  props: {\n    access_token: String,\n    secret_token: String\n  }\n});\n\n/** Localstorage keys */\nconst local_access_token = new LocalStorageVal<string>(\"aws_s3_access_token\");\nconst local_secret_token = new LocalStorageVal<string>(\"aws_s3_secret_token\");\n\n/**\n * File reader component for taking in inspec JSON data.\n * Uploads data to the store with unique IDs asynchronously as soon as data is entered.\n * Emits \"got-files\" with a list of the unique_ids of the loaded files.\n */\n@Component({\n  components: {\n    FileList\n  }\n})\nexport default class S3Reader extends Props {\n  /** Models if currently displayed form is valid.\n   * Shouldn't be used to interpret literally anything else as valid - just checks fields filled\n   */\n  valid: boolean = false;\n  show_secret: boolean = false;\n\n  /** Form required field rules. Maybe eventually expand to other stuff */\n  req_rule = (v: string | null | undefined) =>\n    (v || \"\").trim().length > 0 || \"Field is Required\";\n\n  // Callback for change in access token\n  change_access_token(new_value: string) {\n    local_access_token.set(new_value);\n    this.$emit(\"update:access_token\", new_value);\n  }\n\n  // Callback for change in secret token\n  change_secret_token(new_value: string) {\n    local_secret_token.set(new_value);\n    this.$emit(\"update:secret_token\", new_value);\n  }\n\n  /** On mount, try to look up stored auth info */\n  mounted() {\n    // Load our credentials\n    this.change_access_token(local_access_token.get_default(\"\"));\n    this.change_secret_token(local_secret_token.get_default(\"\"));\n  }\n}\n</script>\n"]}
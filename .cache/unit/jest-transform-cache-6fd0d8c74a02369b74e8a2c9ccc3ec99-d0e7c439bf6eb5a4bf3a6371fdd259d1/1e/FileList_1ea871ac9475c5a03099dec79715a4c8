f184c38cfb2c8edb7b43640081aed276
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _tslib = require("tslib");

var _vue = require("vue");

var _vue2 = _interopRequireDefault(_vue);

var _vueClassComponent = require("vue-class-component");

var _vueClassComponent2 = _interopRequireDefault(_vueClassComponent);

var _vuexModuleDecorators = require("vuex-module-decorators");

var _report_intake = require("@/store/report_intake");

var _report_intake2 = _interopRequireDefault(_report_intake);

var _aws_util = require("../../../../utilities/aws_util");

var _helper_util = require("../../../../utilities/helper_util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

const HEADERS = [{
  text: "Filename",
  align: "left",
  sortable: false,
  value: "name"
}, {
  text: "Last Modified",
  value: "LastModified"
}, {
  text: "Size",
  value: "Size"
}];
/*
  export interface S3.Object {
    Key?: ObjectKey;
    LastModified?: LastModified;
    ETag?: ETag;
    Size?: Size;
    StorageClass?: ObjectStorageClass;
    Owner?: Owner;
  } */
// Caches the bucket name

const local_bucket_name = new _helper_util.LocalStorageVal("aws_bucket_name"); // We declare the props separately to make props types inferable.

const Props = _vue2.default.extend({
  props: {
    auth: Object,
    files: Array,
    error: String
  }
});

let FileList = class FileList extends Props {
  constructor() {
    super(...arguments);
    /** The name written in the form */

    this.form_bucket_name = "";
  }
  /** Currently visible files */


  get _files() {
    return this.files;
  }
  /** Typed getter for auth */


  get _auth() {
    if (this.auth === null) {
      throw new Error("We aren't auth'd");
    }

    return this.auth;
  }
  /** On mount, try to look up stored auth info */

  /** Callback for when user selects a file.
   * Loads it into our system.
   */


  async load_file(index) {
    // Get it out of the list
    let file = this._files[index]; // Generate file id for it, and prep module for load

    let unique_id = (0, _report_intake.next_free_file_ID)();
    let intake_module = (0, _vuexModuleDecorators.getModule)(_report_intake2.default, this.$store); // Fetch it from s3, and promise to submit it to be loaded afterwards

    await (0, _aws_util.fetch_s3_file)(this._auth.creds, file.Key, this.form_bucket_name).then(content => {
      return intake_module.loadText({
        text: content,
        filename: file.Key,
        unique_id
      });
    }).then(() => this.$emit("got-files", [unique_id])).catch(failure => this.handle_error(failure));
  }
  /** Recalls the last entered bucket name.  */


  mounted() {
    this.form_bucket_name = local_bucket_name.get_default("");
  }
  /** Handles when load button clicked */


  load() {
    local_bucket_name.set(this.form_bucket_name);
    this.$emit("load-bucket", this.form_bucket_name);
  }
  /** Callback to handle an AWS error.
   * Sets shown error.
   */


  handle_error(error) {
    let t_error = error;
    console.error("We should re-emit this in an appropriate place");
  }

};
FileList = (0, _tslib.__decorate)([(0, _vueClassComponent2.default)({
  components: {}
})], FileList);
exports.default = FileList; //# sourceMappingURL=module.jsx.map
})()
var defaultExport = (module.exports.__esModule) ? module.exports.default : module.exports;var __vue__options__ = (typeof defaultExport === "function"? defaultExport.options: defaultExport)
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-stepper-content',{attrs:{"step":"3"}},[_c('div',{staticClass:"d-flex flex-column"},[_c('div',{staticClass:"d-flex justify-space-between"},[_c('v-text-field',{attrs:{"label":"Bucket name"},on:{"keyup":function($event){if(!$event.type.indexOf('key')&&_vm._k($event.keyCode,"enter",13,$event.key,"Enter")){ return null; }return _vm.load($event)}},model:{value:(_vm.form_bucket_name),callback:function ($$v) {_vm.form_bucket_name=$$v},expression:"form_bucket_name"}}),_vm._v(" "),_c('v-btn',{staticClass:"fill-height pa-0",attrs:{"title":"Load","disabled":_vm.form_bucket_name.length < 1},on:{"click":_vm.load}},[_c('v-icon',[_vm._v("mdi-cloud-download")])],1)],1),_vm._v(" "),_c('v-list',{attrs:{"two-line":true}},[(_vm.files.length === 0)?_c('v-list-item',[_vm._v("No items found! Try different terms?")]):_vm._e(),_vm._v(" "),_vm._l((_vm.files),function(val,index){return _c('v-list-item',{key:val.Key},[_c('v-list-item-content',[_c('v-list-item-title',[_vm._v(_vm._s(val.Key))]),_vm._v(" "),_c('v-list-item-subtitle',[_vm._v("\n            "+_vm._s(val.LastModified)+"\n          ")])],1),_vm._v(" "),_c('v-list-item-action',[_c('v-btn',{attrs:{"icon":""},on:{"click":function($event){return _vm.load_file(index)}}},[_c('v-icon',[_vm._v("mdi-plus-circle")])],1)],1)],1)})],2),_vm._v(" "),_c('v-btn',{staticClass:"my-2 mr-3",attrs:{"color":"red"},on:{"click":function($event){return _vm.$emit('exit-list')}}},[_vm._v("\n      Cancel\n    ")])],1)])}
__vue__options__.staticRenderFns = []

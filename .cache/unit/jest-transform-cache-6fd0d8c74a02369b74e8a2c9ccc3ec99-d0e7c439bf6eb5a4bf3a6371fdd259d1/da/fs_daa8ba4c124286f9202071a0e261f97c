bcc2cd18b3863d1f42f54279909986d7
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const tslib_1 = require("tslib");
const fs = tslib_1.__importStar(require("fs"));
/** Returns sorted list of files in a directory */
function list_files(dir_path) {
    // Init result array
    let result = fs.readdirSync(dir_path);
    // Sort by filename
    return result.sort();
}
exports.list_files = list_files;
function read_files(dir_name) {
    // List the files
    let files = list_files(dir_name);
    // Read them all
    let result = files.map(filename => {
        let content = fs.readFileSync(dir_name + filename, "utf-8");
        let result = {
            name: filename,
            content
        };
        return result;
    });
    return result;
}
exports.read_files = read_files;
function populate_hash(results) {
    let hash = {};
    results.forEach(f => {
        hash[f.name] = f;
    });
    return hash;
}
function AllCounts() {
    let results = read_files("tests/hdf_data/counts/");
    return populate_hash(results);
}
exports.AllCounts = AllCounts;
function AllInfo() {
    let results = read_files("tests/hdf_data/inspec_tools_info/");
    return populate_hash(results);
}
exports.AllInfo = AllInfo;
function AllRaw() {
    let results = read_files("tests/hdf_data/raw_data/");
    return populate_hash(results);
}
exports.AllRaw = AllRaw;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJmaWxlIjoiL1VzZXJzL3Nqb3NoaS90ZXN0L2hlaW1kYWxsLWxpdGUvdGVzdHMvdXRpbC9mcy50cyIsIm1hcHBpbmdzIjoiOzs7QUFBQSwrQ0FBeUI7QUFFekIsa0RBQWtEO0FBQ2xELFNBQWdCLFVBQVUsQ0FBQyxRQUFnQjtJQUN6QyxvQkFBb0I7SUFDcEIsSUFBSSxNQUFNLEdBQUcsRUFBRSxDQUFDLFdBQVcsQ0FBQyxRQUFRLENBQUMsQ0FBQztJQUV0QyxtQkFBbUI7SUFDbkIsT0FBTyxNQUFNLENBQUMsSUFBSSxFQUFFLENBQUM7QUFDdkIsQ0FBQztBQU5ELGdDQU1DO0FBVUQsU0FBZ0IsVUFBVSxDQUFDLFFBQWdCO0lBQ3pDLGlCQUFpQjtJQUNqQixJQUFJLEtBQUssR0FBRyxVQUFVLENBQUMsUUFBUSxDQUFDLENBQUM7SUFFakMsZ0JBQWdCO0lBQ2hCLElBQUksTUFBTSxHQUFHLEtBQUssQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLEVBQUU7UUFDaEMsSUFBSSxPQUFPLEdBQUcsRUFBRSxDQUFDLFlBQVksQ0FBQyxRQUFRLEdBQUcsUUFBUSxFQUFFLE9BQU8sQ0FBQyxDQUFDO1FBQzVELElBQUksTUFBTSxHQUFlO1lBQ3ZCLElBQUksRUFBRSxRQUFRO1lBQ2QsT0FBTztTQUNSLENBQUM7UUFDRixPQUFPLE1BQU0sQ0FBQztJQUNoQixDQUFDLENBQUMsQ0FBQztJQUNILE9BQU8sTUFBTSxDQUFDO0FBQ2hCLENBQUM7QUFkRCxnQ0FjQztBQUdELFNBQVMsYUFBYSxDQUFDLE9BQXFCO0lBQzFDLElBQUksSUFBSSxHQUFhLEVBQUUsQ0FBQztJQUN4QixPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxFQUFFO1FBQ2xCLElBQUksQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ25CLENBQUMsQ0FBQyxDQUFDO0lBQ0gsT0FBTyxJQUFJLENBQUM7QUFDZCxDQUFDO0FBRUQsU0FBZ0IsU0FBUztJQUN2QixJQUFJLE9BQU8sR0FBRyxVQUFVLENBQUMsd0JBQXdCLENBQUMsQ0FBQztJQUNuRCxPQUFPLGFBQWEsQ0FBQyxPQUFPLENBQUMsQ0FBQztBQUNoQyxDQUFDO0FBSEQsOEJBR0M7QUFFRCxTQUFnQixPQUFPO0lBQ3JCLElBQUksT0FBTyxHQUFHLFVBQVUsQ0FBQyxtQ0FBbUMsQ0FBQyxDQUFDO0lBQzlELE9BQU8sYUFBYSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0FBQ2hDLENBQUM7QUFIRCwwQkFHQztBQUVELFNBQWdCLE1BQU07SUFDcEIsSUFBSSxPQUFPLEdBQUcsVUFBVSxDQUFDLDBCQUEwQixDQUFDLENBQUM7SUFDckQsT0FBTyxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUM7QUFDaEMsQ0FBQztBQUhELHdCQUdDIiwibmFtZXMiOltdLCJzb3VyY2VzIjpbIi9Vc2Vycy9zam9zaGkvdGVzdC9oZWltZGFsbC1saXRlL3Rlc3RzL3V0aWwvZnMudHMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZnMgZnJvbSBcImZzXCI7XG5cbi8qKiBSZXR1cm5zIHNvcnRlZCBsaXN0IG9mIGZpbGVzIGluIGEgZGlyZWN0b3J5ICovXG5leHBvcnQgZnVuY3Rpb24gbGlzdF9maWxlcyhkaXJfcGF0aDogc3RyaW5nKSB7XG4gIC8vIEluaXQgcmVzdWx0IGFycmF5XG4gIGxldCByZXN1bHQgPSBmcy5yZWFkZGlyU3luYyhkaXJfcGF0aCk7XG5cbiAgLy8gU29ydCBieSBmaWxlbmFtZVxuICByZXR1cm4gcmVzdWx0LnNvcnQoKTtcbn1cblxuZXhwb3J0IGludGVyZmFjZSBGaWxlUmVzdWx0IHtcbiAgLyoqIFRoZSBmaWxlbmFtZSAqL1xuICBuYW1lOiBzdHJpbmc7XG5cbiAgLyoqIFRoZSBmaWxlJ3MgY29udGVudCAodXRmLTgpICovXG4gIGNvbnRlbnQ6IHN0cmluZztcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIHJlYWRfZmlsZXMoZGlyX25hbWU6IHN0cmluZyk6IEZpbGVSZXN1bHRbXSB7XG4gIC8vIExpc3QgdGhlIGZpbGVzXG4gIGxldCBmaWxlcyA9IGxpc3RfZmlsZXMoZGlyX25hbWUpO1xuXG4gIC8vIFJlYWQgdGhlbSBhbGxcbiAgbGV0IHJlc3VsdCA9IGZpbGVzLm1hcChmaWxlbmFtZSA9PiB7XG4gICAgbGV0IGNvbnRlbnQgPSBmcy5yZWFkRmlsZVN5bmMoZGlyX25hbWUgKyBmaWxlbmFtZSwgXCJ1dGYtOFwiKTtcbiAgICBsZXQgcmVzdWx0OiBGaWxlUmVzdWx0ID0ge1xuICAgICAgbmFtZTogZmlsZW5hbWUsXG4gICAgICBjb250ZW50XG4gICAgfTtcbiAgICByZXR1cm4gcmVzdWx0O1xuICB9KTtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cblxuZXhwb3J0IHR5cGUgRmlsZUhhc2ggPSB7IFtrZXk6IHN0cmluZ106IEZpbGVSZXN1bHQgfTtcbmZ1bmN0aW9uIHBvcHVsYXRlX2hhc2gocmVzdWx0czogRmlsZVJlc3VsdFtdKSB7XG4gIGxldCBoYXNoOiBGaWxlSGFzaCA9IHt9O1xuICByZXN1bHRzLmZvckVhY2goZiA9PiB7XG4gICAgaGFzaFtmLm5hbWVdID0gZjtcbiAgfSk7XG4gIHJldHVybiBoYXNoO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gQWxsQ291bnRzKCk6IEZpbGVIYXNoIHtcbiAgbGV0IHJlc3VsdHMgPSByZWFkX2ZpbGVzKFwidGVzdHMvaGRmX2RhdGEvY291bnRzL1wiKTtcbiAgcmV0dXJuIHBvcHVsYXRlX2hhc2gocmVzdWx0cyk7XG59XG5cbmV4cG9ydCBmdW5jdGlvbiBBbGxJbmZvKCk6IEZpbGVIYXNoIHtcbiAgbGV0IHJlc3VsdHMgPSByZWFkX2ZpbGVzKFwidGVzdHMvaGRmX2RhdGEvaW5zcGVjX3Rvb2xzX2luZm8vXCIpO1xuICByZXR1cm4gcG9wdWxhdGVfaGFzaChyZXN1bHRzKTtcbn1cblxuZXhwb3J0IGZ1bmN0aW9uIEFsbFJhdygpOiBGaWxlSGFzaCB7XG4gIGxldCByZXN1bHRzID0gcmVhZF9maWxlcyhcInRlc3RzL2hkZl9kYXRhL3Jhd19kYXRhL1wiKTtcbiAgcmV0dXJuIHBvcHVsYXRlX2hhc2gocmVzdWx0cyk7XG59XG4iXSwidmVyc2lvbiI6M30=
1fa443c17fcf366ddce80c4ff22cd722
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.UserProfile = undefined;

var _tslib = require("tslib");

var _vue = require("vue");

var _vue2 = _interopRequireDefault(_vue);

var _vueClassComponent = require("vue-class-component");

var _vueClassComponent2 = _interopRequireDefault(_vueClassComponent);

var _vuexModuleDecorators = require("vuex-module-decorators");

var _Modal = require("@/components/global/Modal.vue");

var _Modal2 = _interopRequireDefault(_Modal);

var _FileReader = require("@/components/global/upload_tabs/FileReader.vue");

var _FileReader2 = _interopRequireDefault(_FileReader);

var _DatabaseReader = require("@/components/global/upload_tabs/DatabaseReader.vue");

var _DatabaseReader2 = _interopRequireDefault(_DatabaseReader);

var _HelpFooter = require("@/components/global/upload_tabs/HelpFooter.vue");

var _HelpFooter2 = _interopRequireDefault(_HelpFooter);

var _S3Reader = require("@/components/global/upload_tabs/aws/S3Reader.vue");

var _S3Reader2 = _interopRequireDefault(_S3Reader);

var _SplunkReader = require("@/components/global/upload_tabs/splunk/SplunkReader.vue");

var _SplunkReader2 = _interopRequireDefault(_SplunkReader);

var _SampleList = require("@/components/global/upload_tabs/SampleList.vue");

var _SampleList2 = _interopRequireDefault(_SampleList);

var _server = require("@/store/server");

var _server2 = _interopRequireDefault(_server);

var _helper_util = require("@/utilities/helper_util");

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

class UserProfile {}

exports.UserProfile = UserProfile;
const local_tab = new _helper_util.LocalStorageVal("nexus_curr_tab"); // We declare the props separately to make props types inferable.

const Props = _vue2.default.extend({
  props: {
    value: Boolean,
    persistent: Boolean // Whether clicking outside closes

  }
});
/**
 * Multiplexes all of our file upload components
 * Emits "got-files" with a list of the unique_ids of the loaded files, wherever they come from
 */


let UploadNexus = class UploadNexus extends Props {
  constructor() {
    super(...arguments);
    this.active_tab = ""; // Set in mounted
  } // Loads the last open tab


  mounted() {
    console.log("mount UploadNexus");
    this.active_tab = local_tab.get_default("uploadtab-local");
  }

  get is_logged_in() {
    let mod = (0, _vuexModuleDecorators.getModule)(_server2.default, this.$store);

    if (mod.serverMode) {
      if (this.token) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }

  get token() {
    let mod = (0, _vuexModuleDecorators.getModule)(_server2.default, this.$store);
    return mod.token || "";
  }

  get user() {
    let mod = (0, _vuexModuleDecorators.getModule)(_server2.default, this.$store);

    if (mod.profile) {
      return mod.profile.email || "pending";
    } else {
      return "pending";
    }
  } //logout from backend


  logout() {
    console.log("logout");
    (0, _vuexModuleDecorators.getModule)(_server2.default, this.$store).clear_token();
    this.$router.push("/login");
  } // Handles change in tab


  selected_tab(new_tab) {
    this.active_tab = new_tab;
    local_tab.set(new_tab);
  } // Event passthrough


  got_files(files) {
    console.log("got_files");
    this.$emit("got-files", files);
  }

};
UploadNexus = (0, _tslib.__decorate)([(0, _vueClassComponent2.default)({
  components: {
    Modal: _Modal2.default,
    FileReader: _FileReader2.default,
    DatabaseReader: _DatabaseReader2.default,
    HelpFooter: _HelpFooter2.default,
    S3Reader: _S3Reader2.default,
    SplunkReader: _SplunkReader2.default,
    SampleList: _SampleList2.default
  }
})], UploadNexus);
exports.default = UploadNexus; //# sourceMappingURL=module.jsx.map
})()
var defaultExport = (module.exports.__esModule) ? module.exports.default : module.exports;var __vue__options__ = (typeof defaultExport === "function"? defaultExport.options: defaultExport)
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-container',[_c('Modal',{attrs:{"value":_vm.value,"persistent":_vm.persistent},on:{"input":function($event){return _vm.$emit('input', $event.target.value)}}},[(_vm.is_logged_in)?_c('div',{staticStyle:{"padding":"8px","float":"right","width":"100px"}},[_c('v-btn',{attrs:{"id":"logout","color":"normal"},on:{"click":function($event){return _vm.logout()}}},[_vm._v("Logout")])],1):_vm._e(),_vm._v(" "),_c('v-tabs',{attrs:{"vertical":_vm.$vuetify.breakpoint.mdAndUp,"active":"","value":_vm.active_tab,"color":"primary-visible","show-arrows":""},on:{"change":_vm.selected_tab}},[_c('v-tabs-slider'),_vm._v(" "),_c('v-tab',{attrs:{"href":"#uploadtab-local"}},[_vm._v("Local Files")]),_vm._v(" "),(_vm.is_logged_in)?_c('v-tab',{attrs:{"href":"#uploadtab-database"}},[_vm._v("\n        "+_vm._s(_vm.user)+" Files\n      ")]):_vm._e(),_vm._v(" "),_c('v-tab',{attrs:{"href":"#uploadtab-s3"}},[_vm._v("S3 Bucket")]),_vm._v(" "),_c('v-tab',{attrs:{"href":"#uploadtab-splunk"}},[_vm._v("Splunk")]),_vm._v(" "),_c('v-spacer'),_vm._v(" "),_c('v-divider'),_vm._v(" "),_c('v-tab',{attrs:{"href":"#uploadtab-samples"}},[_vm._v("Samples")]),_vm._v(" "),_c('v-tab-item',{attrs:{"value":"uploadtab-local"}},[_c('FileReader',{on:{"got-files":_vm.got_files}})],1),_vm._v(" "),_c('v-tab-item',{attrs:{"value":"uploadtab-database"}},[_c('DatabaseReader',{on:{"got-files":_vm.got_files}})],1),_vm._v(" "),_c('v-tab-item',{attrs:{"value":"uploadtab-samples"}},[_c('SampleList',{on:{"got-files":_vm.got_files}})],1),_vm._v(" "),_c('v-tab-item',{attrs:{"value":"uploadtab-s3"}},[_c('S3Reader',{on:{"got-files":_vm.got_files}})],1),_vm._v(" "),_c('v-tab-item',{attrs:{"value":"uploadtab-splunk"}},[_c('SplunkReader',{on:{"got-files":_vm.got_files}})],1)],1),_vm._v(" "),_c('HelpFooter')],1)],1)}
__vue__options__.staticRenderFns = []

c5acc1f0347e1e3acb2599b0baad0338
;(function(){
"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _tslib = require("tslib");

var _vue = require("vue");

var _vue2 = _interopRequireDefault(_vue);

var _vueClassComponent = require("vue-class-component");

var _vueClassComponent2 = _interopRequireDefault(_vueClassComponent);

var _vuexModuleDecorators = require("vuex-module-decorators");

var _report_intake = require("@/store/report_intake");

var _report_intake2 = _interopRequireDefault(_report_intake);

var _app_info = require("../../../store/app_info");

var _app_info2 = _interopRequireDefault(_app_info);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

// We declare the props separately to make props types inferable.
const Props = _vue2.default.extend({
  props: {}
});
/**
 * File reader component for taking in inspec JSON data.
 * Uploads data to the store with unique IDs asynchronously as soon as data is entered.
 * Emits "got-files" with a list of the unique_ids of the loaded files.
 */


let SampleList = class SampleList extends Props {
  get samples() {
    return [{
      name: "Sonarqube Java Heimdall_tools Sample",
      url: `https://raw.githubusercontent.com/${this.repo}/master/samples/sonarqube_java_sample.json`
    }, {
      name: "OWASP ZAP Webgoat Heimdall_tools Sample",
      url: `https://raw.githubusercontent.com/${this.repo}/master/samples/owasp_zap_webgoat.json`
    }, {
      name: "OWASP ZAP Zero_WebAppSecurity Heimdall_tools Sample",
      url: `https://raw.githubusercontent.com/${this.repo}/master/samples/owasp_zap_zero.webappsecurity.json`
    }, {
      name: "Fortify Heimdall_tools Sample",
      url: `https://raw.githubusercontent.com/${this.repo}/master/samples/fortify_h_tools_conv_webgoat.json`
    }, {
      name: "AWS S3 Permissions Check InSpec Sample",
      url: `https://raw.githubusercontent.com/${this.repo}/master/samples/aws-s3-baseline.json`
    }, {
      name: "AWS CIS Foundations Baseline InSpec Sample",
      url: `https://raw.githubusercontent.com/${this.repo}/master/samples/cis-aws-foundations-baseline.json`
    }, {
      name: "NGINX Inspec Sample",
      url: `https://raw.githubusercontent.com/${this.repo}/master/samples/good_nginxresults.json`
    }, {
      name: "Red Hat CVE Vulnerability Scan InSpec Sample",
      url: `https://raw.githubusercontent.com/${this.repo}/master/samples/rhel_cve_vulnerability_scan_baseline_with_failures.json`
    }, {
      name: "RedHat 7 STIG Baseline InSpec Sample",
      url: `https://raw.githubusercontent.com/${this.repo}/master/samples/rhel7-results.json`
    }, {
      name: "Ubuntu STIG Baseline InSpec Sample",
      url: `https://raw.githubusercontent.com/${this.repo}/master/samples/ubuntu-16.04-baseline-results.json`
    }];
  }

  get repo() {
    let mod = (0, _vuexModuleDecorators.getModule)(_app_info2.default, this.$store);
    return `${mod.repo_org}/${mod.repo_name}`;
  }
  /** Callback for our list item clicks */


  load_sample(sample) {
    // Generate an id
    let unique_id = (0, _report_intake.next_free_file_ID)(); // Get intake module

    let intake_module = (0, _vuexModuleDecorators.getModule)(_report_intake2.default, this.$store); // Do fetch

    fetch(sample.url, {
      method: "get"
    }).then(response => response.text()).then(text => intake_module.loadText({
      filename: sample.name,
      unique_id,
      text
    })).then(err => {
      // Handle errors if necessary
      if (err) {
        throw `Error loading sample ${sample.name}`;
      } else {
        // Emit success
        this.$emit("got-files", [unique_id]);
      }
    }).catch(err => {
      // Toast whatever error we got
      this.$toasted.global.error({
        message: String(err),
        isDark: this.$vuetify.theme.dark
      });
    });
  }

};
SampleList = (0, _tslib.__decorate)([(0, _vueClassComponent2.default)({
  components: {}
})], SampleList);
exports.default = SampleList; //# sourceMappingURL=module.jsx.map
})()
var defaultExport = (module.exports.__esModule) ? module.exports.default : module.exports;var __vue__options__ = (typeof defaultExport === "function"? defaultExport.options: defaultExport)
__vue__options__.render = function render () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('v-card',{staticClass:"elevation-0"},[_c('v-card-subtitle',[_vm._v("\n    Samples to show the power of the Heimdall application and supported HDF\n    formats\n  ")]),_vm._v(" "),_c('v-list',_vm._l((_vm.samples),function(sample,index){return _c('v-list-item',{key:index},[_c('v-list-item-content',[_c('v-list-item-title',{domProps:{"textContent":_vm._s(sample.name)}})],1),_vm._v(" "),_c('v-list-item-action',[_c('v-btn',{attrs:{"icon":""},on:{"click":function($event){return _vm.load_sample(sample)}}},[_c('v-icon',[_vm._v("mdi-plus-circle")])],1)],1)],1)}),1)],1)}
__vue__options__.staticRenderFns = []
